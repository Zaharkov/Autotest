//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  INSERT INTO [BO_M_LOGS].[dbo].[ErrorLogs] VALUES 
        ///  (NEWID(), @TestId, @ParallelId, @Text, @Type, @Line, @Time, @Bug, @ScreenPath, @Checked, @GuidText).
        /// </summary>
        internal static string AddErrorLog {
            get {
                return ResourceManager.GetString("AddErrorLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  INSERT INTO [BO_M_LOGS].[dbo].[ParallelLogs] VALUES
        ///  (@Id, @Address, @TimeStart, null, @ScreenPath, @TestsCount, 0).
        /// </summary>
        internal static string AddParallelLog {
            get {
                return ResourceManager.GetString("AddParallelLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  INSERT INTO [BO_M_LOGS].[dbo].[TestLogs] VALUES
        ///  (@TestId, @ParallelId, @TimeStart, null, @Login).
        /// </summary>
        internal static string AddTestLog {
            get {
                return ResourceManager.GetString("AddTestLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [BO_M_LOGS].[dbo].[ErrorLogs] WHERE TestId = @TestId AND ParallelId = @ParallelId
        ///DELETE FROM [BO_M_LOGS].[dbo].[TestLogs] WHERE TestId = @TestId AND ParallelId = @ParallelId.
        /// </summary>
        internal static string DeleteTestLog {
            get {
                return ResourceManager.GetString("DeleteTestLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var newArray = new Object();
        ///newArray[&apos;SetTimeouts&apos;] = new Object();
        ///newArray[&apos;SetIntervals&apos;] = new Object();
        ///newArray[&apos;Ajax&apos;] = 0;
        ///
        ///var setTimeouts = window._activeSetTimeouts;
        ///for (var keyTimeouts in setTimeouts) {
        ///    if (keyTimeouts &gt; arguments[0] &amp;&amp; setTimeouts[keyTimeouts][&apos;delay&apos;] &lt; 5000) {
        ///        newArray[&apos;SetTimeouts&apos;][keyTimeouts] = setTimeouts[keyTimeouts];
        ///    }
        ///}
        ///
        ///var setIntervals = window._activeSetIntervals;
        ///for (var keyIntervals in setIntervals) {
        ///    if (keyIntervals &gt; argume [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAjax {
            get {
                return ResourceManager.GetString("GetAjax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT A.Name FROM 
        ///[BO_M_LOGS].[dbo].[AutoTestLog] A
        ///INNER JOIN [BO_M_LOGS].[dbo].[ErrorLogs] B
        ///ON A.Id = B.TestId
        ///WHERE B.Checked = &apos;0&apos; AND ParallelId = @ParallelId.
        /// </summary>
        internal static string GetFailedTests {
            get {
                return ResourceManager.GetString("GetFailedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to document.getElementByXPath = (function (sValue) {
        ///    var a = this.evaluate(sValue, this, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
        ///    if (a.snapshotLength &gt; 0) {
        ///        return a.snapshotItem(0);
        ///    }
        ///});
        ///
        ///document.getOffset = (function (elem) {
        ///    if (elem.getBoundingClientRect) {
        ///        // &quot;правильный&quot; вариант
        ///        return document.getOffsetRect(elem);
        ///    } else {
        ///        // пусть работает хоть как-то
        ///        return document.getOffsetSum(elem);
        ///    }
        ///});
        ///
        ///document.getOf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string getOffSet {
            get {
                return ResourceManager.GetString("getOffSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TestId as Id, AVG(time.Time) as Time
        /// FROM [BO_M_LOGS].[dbo].[TestLogs] a
        /// cross apply (SELECT TOP 5 DATEDIFF(second, TimeStart, TimeEnd) as Time FROM [BO_M_LOGS].[dbo].[TestLogs] b
        /// WHERE a.TestId = b.TestId and b.TimeEnd is not NULL ORDER BY b.TimeStart DESC) time
        /// GROUP BY TestId.
        /// </summary>
        internal static string GetTestDate {
            get {
                return ResourceManager.GetString("GetTestDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF (SELECT COUNT(*) FROM [BO_M_LOGS].[dbo].[AutoTestLog] WITH (NOLOCK) WHERE Id = @Id) = 0
        ///	  INSERT INTO [BO_M_LOGS].[dbo].[AutoTestLog]
        ///	  (Id, Name, Time, CriticalError, SimpleError, isTestValid, Description, Bugs, EndTime, Owner)
        ///	  VALUES  (@Id, @Name, @Time, @CriticalError, @SimpleError, @IsTestValid, &apos;&apos;, &apos;&apos;, @EndTime, @Owner)
        ///ELSE
        ///	UPDATE [BO_M_LOGS].[dbo].[AutoTestLog]
        ///	SET Name = @Name,
        ///		Time = (Time * 4 + @Time) / 5,
        ///		CriticalError = @CriticalError,
        ///		SimpleError = @SimpleError,
        ///		Desc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InsertTestData {
            get {
                return ResourceManager.GetString("InsertTestData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to arguments[0].scrollIntoView();
        ///window.scrollBy(0, -(window.scrollY - document.getOffsetRect(arguments[0]).top + arguments[1]));
        ///
        ///var errorBox = document.getElementByXPath(&apos;//*[@class=&quot;ajax-error-box&quot;]&apos;);
        ///var alertBox = document.getElementByXPath(&apos;//*[@class=&quot;ajax-alert-box&quot;]&apos;);
        ///var alertBox2 = document.getElementByXPath(&apos;//*[@class=&quot;alert-box&quot;]&apos;);
        ///if (typeof errorBox != &apos;undefined&apos;) errorBox.style.top = &apos;-100px&apos;;
        ///if (typeof alertBox != &apos;undefined&apos;) alertBox.style.top = &apos;-100px&apos;;
        ///if (typeof alertBox2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string scrollToView {
            get {
                return ResourceManager.GetString("scrollToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF (SELECT COUNT(*) FROM [BO_M_LOGS].[dbo].[AutoTestLog] WITH (NOLOCK) WHERE Id = @Id) = 0
        ///	  INSERT INTO [BO_M_LOGS].[dbo].[AutoTestLog]
        ///	  (Id, Name, Time, CriticalError, SimpleError, isTestValid, Description, Bugs, EndTime, Owner)
        ///	  VALUES  (@Id, @Name, &apos;30&apos;, &apos;0&apos;, &apos;0&apos;, &apos;1&apos;, &apos;&apos;, &apos;&apos;, GETDATE(), @Owner).
        /// </summary>
        internal static string SetDefaultTestData {
            get {
                return ResourceManager.GetString("SetDefaultTestData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [BO_M_LOGS].[dbo].[ParallelLogs] SET TimeEnd = @TimeEnd WHERE Id = @Id.
        /// </summary>
        internal static string SetParallelLogTimeEnd {
            get {
                return ResourceManager.GetString("SetParallelLogTimeEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [BO_M_LOGS].[dbo].[TestLogs] SET TimeEnd = @TimeEnd WHERE TestId = @TestId AND ParallelId = @ParallelId.
        /// </summary>
        internal static string SetTestLogTimeEnd {
            get {
                return ResourceManager.GetString("SetTestLogTimeEnd", resourceCulture);
            }
        }
    }
}
